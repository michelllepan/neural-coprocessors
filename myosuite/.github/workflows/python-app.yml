# This workflow will install Python dependencies, run tests

name: Python application

on:
  push:
    branches: [ "main" , "dev"]
    paths-ignore:
      - "docs/**"
      - "**/README.md"

  pull_request:
    branches: [ "main" , "dev"]
    paths-ignore:
      - "docs/**"
      - "**/README.md"

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    env:
      DISPLAY: :0
  
    defaults:
      run:
        shell: bash -l {0}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Prepare Linux
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt-get update -y -qq
        sudo apt-get install -y xvfb x11-xserver-utils
        sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &               
        
    - name: Enable Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: anaconda-client-env
        auto-activate-base: false
    - name: Test Conda
      run: |
          conda info
          CONDA_DEFAULT_ENV=test_myosuite
          conda create --name $CONDA_DEFAULT_ENV python=3.8 -y
          conda activate $CONDA_DEFAULT_ENV

#     - name: Prepare MacOS
#       if: ${{ runner.os == 'macOS' }}
#       run: |
#         brew install --cask xquartz
#         brew install hdf5        
#         export CPATH="/opt/homebrew/include/"
#         export HDF5_DIR=/opt/homebrew/
#         pip3 install h5py --only-binary h5py
    - name: Install dependencies
      run: |
        conda activate $CONDA_DEFAULT_ENV
        python3 -m pip install --upgrade pip
        pip3 install -e .
        
    - name: Run MuJoCo Rendering test
      if: ${{ runner.os == 'Linux' }}
      run: python3 -m mujoco.render_test
      
    - name: Run Test environment
      run: |
        conda activate $CONDA_DEFAULT_ENV
        python3 -m myosuite.tests.test_myo
        
    - name: Install ffmpeg
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt-get install --no-install-recommends ffmpeg && pip3 install ffmpeg scikit-video

    - name: Test rendering
      if: ${{ runner.os == 'Linux' }}
      run: python3 -m myosuite.utils.examine_env -e myoElbowPose1D6MRandom-v0 -r offscreen -n 1
    - name: Run Test jupyter-notebooks tutorials
      if: ${{ runner.os == 'Linux' }}
      run: |
        conda activate $CONDA_DEFAULT_ENV
        source myosuite/tests/test_tutorials.sh
